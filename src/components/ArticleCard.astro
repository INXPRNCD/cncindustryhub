---
interface Props {
  title: string;
  description: string;
  image: string;
  href: string;
  category?: string;
}

const { title, description, image, href, category } = Astro.props;
---

<article class="bg-white rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-xl hover:translate-y-[-4px]">
  <a href={href} class="block">
    <div class="relative aspect-video bg-gray-100">
      <img
        src={image}
        alt={title}
        class="w-full h-full object-cover"
        onerror="this.src='/images/fallback.jpg'; this.classList.add('opacity-90')"
        loading="lazy"
        decoding="async"
      />
      {category && (
        <span class="absolute top-4 right-4 bg-blue-600 text-white px-3 py-1 rounded-full text-sm font-medium shadow-lg">
          {category}
        </span>
      )}
      <div class="absolute inset-0 bg-gradient-to-t from-black/10 to-transparent"></div>
    </div>
    <div class="p-6">
      <h3 class="text-xl font-bold mb-2 text-gray-900 group-hover:text-blue-600">{title}</h3>
      <p class="text-gray-600 mb-4 line-clamp-2">{description}</p>
      <div class="text-blue-600 font-medium inline-flex items-center group">
        Weiterlesen
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          class="h-4 w-4 ml-1 transform transition-transform group-hover:translate-x-1" 
          viewBox="0 0 20 20" 
          fill="currentColor"
        >
          <path 
            fill-rule="evenodd" 
            d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" 
            clip-rule="evenodd" 
          />
        </svg>
      </div>
    </div>
  </a>
</article>